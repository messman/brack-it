$grid-padding: 20px;

@mixin create-grid-cols($classname) {
	.grid {
		// Direction of items (default: row)
		&.#{$classname}-row {
			flex-direction: row;
		}
		&.#{$classname}-column {
			flex-direction: column;
		}

		// Main-axis (above) alignment (default: flex-start)
		&.#{$classname}-main-start {
			// ABCD--------
			justify-content: flex-start;
		}
		&.#{$classname}-main-center {
			// ----ABCD----
			justify-content: center;
		}
		&.#{$classname}-main-end {
			// --------ABCD
			justify-content: flex-end;
		}
		&.#{$classname}-main-around {
			// -A--B--C--D-
			justify-content: space-around;
		}
		&.#{$classname}-main-between {
			// A---B---C---D
			justify-content: space-between;
		}

		// Cross-axis alignment (default: flex-start)
		&.#{$classname}-cross-start {
			align-items: flex-start;
		}
		&.#{$classname}-cross-center {
			align-items: center;
		}
		&.#{$classname}-cross-end {
			align-items: flex-end;
		}
		&.#{$classname}-cross-baseline {
			align-items: baseline;
		}
		&.#{$classname}-cross-stretch {
			align-items: stretch;
		}

		// Force children to each take up as much space as possible
		&.#{$classname}-flex-children > * {
			flex: 1;
			overflow: auto;
		}
		// Make a child take up as much space as possible
		> .#{$classname}-flexed {
			flex: 1;
			overflow: auto;
		}

		@for $index from 1 through 12 {
			> .#{$classname}-#{$index} {
				flex: 0 0 percentage($index/12);
			}
			//  > *.#{$classname}-push-#{$index} {
			// 	margin-left: percentage($index/12);
			// }
		}
	}
 }
 
 .grid {
	display: flex;
	flex-wrap: nowrap;
	// &.grid-pad {
	// 	padding: $grid-padding / 2;
	// }
	// &.spread > * {
	// 	flex: 0 0 100%;
	// }
	&.grid-pad > * {
		padding: $grid-padding / 2;
	}
 }
 
 @each $break in $breaks {
	@include break-min($break) {
		@include create-grid-cols("g#{$break}");
	}
 }